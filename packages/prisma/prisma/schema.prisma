generator client {
    binaryTargets = ["linux-musl-openssl-3.0.x", "native"]
    provider      = "prisma-client-js"
    output        = "../src/generated/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    type              String
    provider          String
    providerAccountId String
    userId            String
    access_token      String?
    refresh_token     String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@id([provider, providerAccountId])
}

model BoardTemplate {
    id               String   @id @default(cuid())
    announceInChat   Boolean
    heatmapThreshold Int
    slug             String   @unique
    title            String
    tiles            Json
    createdAt        DateTime @default(now())
    updatedAt        DateTime @updatedAt

    authorId String
    author   User   @relation(fields: [authorId], references: [id])
}

model SecretStore {
    key       String   @id
    value     String
    iv        String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Session {
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model User {
    id             String          @id @default(cuid())
    name           String
    email          String          @unique
    emailVerified  DateTime?
    image          String?
    accounts       Account[]
    sessions       Session[]
    boardTemplates BoardTemplate[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
